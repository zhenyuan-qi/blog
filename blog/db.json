{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg","path":"images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg","modified":1,"renderable":0},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/copycode.css","path":"css/copycode.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/copyright.css","path":"css/copyright.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/search.css","path":"css/search.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/copycode.js","path":"js/copycode.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/copyright.js","path":"js/copyright.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/love.js","path":"js/love.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/Vue面试题.md","hash":"339328bf91ae6f8e4aec8f19cfc716503c0b1b26","modified":1647587773490},{"_id":"source/_posts/Vuex学习.md","hash":"03638359e24e728108deffe224ca36a2087d0e6f","modified":1647935840413},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"source/_posts/深、浅拷贝.md","hash":"6fd01d46c7efdfc7158f4e6f43d50d81e2547416","modified":1647935900782},{"_id":"source/_posts/圣杯和双飞翼布局.md","hash":"5222b3f5cb906eda88baf5e17a56ea9a5e2585a9","modified":1647677869648},{"_id":"source/_posts/随笔.md","hash":"5bf6c43627e21ed0980e5dd3665b5127a1a52a26","modified":1647514940099},{"_id":"source/about/index.md","hash":"ba31b2f3ce3e0f650e963048b04cb597f29c3703","modified":1647586969649},{"_id":"source/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg","hash":"849b7f61acb93d628ce040f6d75ee34c0d9cfec0","modified":1647676452509},{"_id":"themes/maupassant/.gitignore","hash":"d7d27e5a9bcffe7f90dc2f4f0752e19020e40f40","modified":1647512784190},{"_id":"themes/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1647512784190},{"_id":"themes/maupassant/README.md","hash":"f7f36a633be735f2d9f5c2746cc6b440eb60e03c","modified":1647512784191},{"_id":"themes/maupassant/LICENSE","hash":"0663fd3a7ea9fc4f4c634b4d73e2da426b536f86","modified":1647512784190},{"_id":"themes/maupassant/_config.yml","hash":"97eb84f42bf609c5b9b059f66ef0c08eaeb03a03","modified":1647513239426},{"_id":"themes/maupassant/package.json","hash":"5328c4c435cd4a5fe47caae31b9975013cdca5bb","modified":1647512784199},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"25d1d8cd8113045a7603c14af1ea1539fc6456ed","modified":1647512784191},{"_id":"themes/maupassant/languages/en.yml","hash":"93674c5df281d7f5647fe500e10924008d8017c6","modified":1647512784191},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"3a50568f200b9c1258415b53727e42c6b6c7ea0b","modified":1647512784192},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"3cc9312fbdba4a8f8e8254804121e4724c719bcc","modified":1647512784192},{"_id":"themes/maupassant/languages/ko.yml","hash":"a454bcec60113507bc1d593a699849822386c196","modified":1647512784192},{"_id":"themes/maupassant/languages/ru.yml","hash":"36edc014c6aaef367d58929089bf7915375e71a6","modified":1647512784192},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"a6fa4ea6c3a59ae6ac13230d6154d1fdd6c149f3","modified":1647512784192},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"795f420382a150d570a06ffc278c4e7819260691","modified":1647512784193},{"_id":"themes/maupassant/layout/base.pug","hash":"4c380e48f7e84619e2fc311dac82fc0e0e017c46","modified":1647512784198},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"00792d30c4197ee79049060f56308327888e6812","modified":1647512784198},{"_id":"themes/maupassant/layout/archive.pug","hash":"3770284e425fb0c14d60ae6ac454f58ba07ce76b","modified":1647512784197},{"_id":"themes/maupassant/layout/index.pug","hash":"089fc4f6fa928c4229cd79d8dd38b7cb6155d8a5","modified":1647512784198},{"_id":"themes/maupassant/layout/page.pug","hash":"647bfba2208cbef052e1bf307d30a6775671215d","modified":1647512784198},{"_id":"themes/maupassant/layout/post.pug","hash":"0f5f124b944a64493d4b0b997c1eebfe8dd4f891","modified":1647512784198},{"_id":"themes/maupassant/layout/single-column.pug","hash":"8b4b731cdf86379d526821a1fa950bf15ed61f15","modified":1647512784199},{"_id":"themes/maupassant/layout/tagcloud.pug","hash":"9ad3083c2f70fdb460ecbe277be97320a2621196","modified":1647512784199},{"_id":"themes/maupassant/layout/timeline.pug","hash":"04f7efdc45acda1faff409d0f80fa5a0dd2309d0","modified":1647512784199},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"7f9f9d33edc563651222c0dd9ade7f38d4600f7c","modified":1647512784193},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"063e74bd7b98f9df098aa213e69379effb53122e","modified":1647512784193},{"_id":"themes/maupassant/layout/_partial/darkmode.pug","hash":"8a4c53229394ba6cf63afd427b4e6b1dc1156526","modified":1647512784194},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"75a15b8a09146ae027355439fbbf5d27414f9e35","modified":1647512784194},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"92aa15e813bfb411803cc54218feb5410469a9c2","modified":1647512784194},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1647512784194},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1647512784194},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1647512784195},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1647512784195},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"a255fca3557a0dac0ad49c7d4456133420c22bd8","modified":1647512784195},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1647512784195},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1647512784195},{"_id":"themes/maupassant/layout/_partial/wordcount.pug","hash":"f848b6ac3f44cfd4110a2d1c742c73eacd6285ee","modified":1647512784196},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1647512784196},{"_id":"themes/maupassant/layout/_widget/copyright.pug","hash":"44935b31e7b3b6232a9a587775cfe9e90efc6a89","modified":1647512784196},{"_id":"themes/maupassant/layout/_widget/donate.pug","hash":"666a89edbc1d7186afba68e0b3bee7e957d7a26e","modified":1647512784196},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"7bc7c17cfd498c3e0c3371cef78f08f1dc25db36","modified":1647512784196},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1647512784197},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"757f517b776178e50ae4d3b8af129a3d80240d05","modified":1647512784197},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"6aa743486f282545f553a4fad6aae037afe26108","modified":1647512784197},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"37f236365b153fc40324391e5a602d6d50014e18","modified":1647512784197},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"3d94d2f9b09e352802628c9225578e1086f5fef3","modified":1647512784201},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"590b6b6462896168d08b30dfe2de5f08950d5553","modified":1647512784201},{"_id":"themes/maupassant/source/img/github.svg","hash":"277798d16cb6106e45ef74f6b9972011fa43401b","modified":1647512784202},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"09786c983a10bc570dcd05b87cec601e9d01eb00","modified":1647512784202},{"_id":"themes/maupassant/source/img/like.svg","hash":"e6e4bd1af076be9358316cac89efdc22ef4a5064","modified":1647512784202},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"19c1f68ec8c0b8e9f7855e7a6e78077f70a1aedc","modified":1647512784202},{"_id":"themes/maupassant/source/css/copycode.css","hash":"23fefb18f1d4dc7bde33e29d6ae737570277d943","modified":1647512784200},{"_id":"themes/maupassant/source/css/copyright.css","hash":"ad420043e1d0518bfbf3b2a2d87fb5b104587c6f","modified":1647512784200},{"_id":"themes/maupassant/source/css/donate.css","hash":"d9ef1520e136198c0ae13acef7da22a275fb4dbf","modified":1647512784200},{"_id":"themes/maupassant/source/css/search.css","hash":"a1720a63170ff4ae9048f634e8e1900e7a3cc45a","modified":1647512784200},{"_id":"themes/maupassant/source/css/style.scss","hash":"a69ab23cc2bbb64560fa3c20a8535e747b0413e0","modified":1647512784201},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1647512784203},{"_id":"themes/maupassant/source/js/copycode.js","hash":"6df3139581744e7bcd47243e4587f5397c2a24c3","modified":1647512784203},{"_id":"themes/maupassant/source/js/copyright.js","hash":"0e9a845ae05d2f00721ff6ee910c8c3cace26043","modified":1647512784203},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1647512784204},{"_id":"themes/maupassant/source/js/love.js","hash":"60df5dc3d09c8f33d1d02f54cbc73bf8d62f52fb","modified":1647512784204},{"_id":"themes/maupassant/source/js/donate.js","hash":"82f06bd69782c1138c98b4276771a41e3a54c061","modified":1647512784203},{"_id":"themes/maupassant/source/js/search.js","hash":"65d8e6d6c46fa060ce5b0d89e2fd778b6b2967d5","modified":1647512784204},{"_id":"themes/maupassant/source/js/share.js","hash":"514e726c1efae9f6566600fa0e945b4b9e620f2e","modified":1647512784204},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1647512784204},{"_id":"themes/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1647512784205},{"_id":"public/about/index.html","hash":"064f6cbaa76105c89dbee79ce7b8a9fe9ca18ee8","modified":1647948217020},{"_id":"public/2022/03/22/深、浅拷贝/index.html","hash":"ae41d19a4cc997d744390e123f556e11a9523f82","modified":1647948217020},{"_id":"public/2022/03/18/圣杯和双飞翼布局/index.html","hash":"37fbdecf196b61548ec56bcc4cec9910d763e6bd","modified":1647948217020},{"_id":"public/2022/03/18/Vue面试题/index.html","hash":"d895876febe9a74f6f7459ad7608e115bc6274df","modified":1647948217020},{"_id":"public/2022/03/17/随笔/index.html","hash":"52b8ca89a3c22e27b2b8257dcfdf540b989d20c7","modified":1647948217020},{"_id":"public/2022/03/16/hello-world/index.html","hash":"42038fd29b45cd1b8897000bf9613204326810f6","modified":1647948217020},{"_id":"public/archives/index.html","hash":"0d32599e786e7dcd204447c0500e0e9ee9500e3d","modified":1647948217020},{"_id":"public/archives/2022/index.html","hash":"0d32599e786e7dcd204447c0500e0e9ee9500e3d","modified":1647948217020},{"_id":"public/archives/2022/03/index.html","hash":"0d32599e786e7dcd204447c0500e0e9ee9500e3d","modified":1647948217020},{"_id":"public/tags/vue/index.html","hash":"fcbc52dbaa5cbd60846a66d990c313b9d33c24e8","modified":1647948217020},{"_id":"public/tags/js/index.html","hash":"92cc93544ea74f547f63a9537911ed6ba05987f4","modified":1647948217020},{"_id":"public/tags/css/index.html","hash":"0270966ca24ac5c3998e0b4fee9ddfd1359b3e08","modified":1647948217020},{"_id":"public/tags/随笔/index.html","hash":"33838da16fc4db25b34732defa96f2e4a2c4a4db","modified":1647948217020},{"_id":"public/2022/03/21/Vuex学习/index.html","hash":"b99258d067ec7f0d1ff263560332dac03d3918e2","modified":1647948217020},{"_id":"public/index.html","hash":"762c9b1271430cbe3dc5a58cbf5909e4983626cd","modified":1647948217020},{"_id":"public/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg","hash":"849b7f61acb93d628ce040f6d75ee34c0d9cfec0","modified":1647948217020},{"_id":"public/img/alipay.svg","hash":"3d94d2f9b09e352802628c9225578e1086f5fef3","modified":1647948217020},{"_id":"public/img/paypal.svg","hash":"09786c983a10bc570dcd05b87cec601e9d01eb00","modified":1647948217020},{"_id":"public/img/like.svg","hash":"e6e4bd1af076be9358316cac89efdc22ef4a5064","modified":1647948217020},{"_id":"public/img/bitcoin.svg","hash":"590b6b6462896168d08b30dfe2de5f08950d5553","modified":1647948217020},{"_id":"public/img/github.svg","hash":"277798d16cb6106e45ef74f6b9972011fa43401b","modified":1647948217020},{"_id":"public/img/wechat.svg","hash":"19c1f68ec8c0b8e9f7855e7a6e78077f70a1aedc","modified":1647948217020},{"_id":"public/css/copycode.css","hash":"e2463b8dacf629e180a1b6cd80667ca8044292eb","modified":1647948217020},{"_id":"public/css/search.css","hash":"9406e138d7bb6a9ef4a067eba1dafa627519c8a7","modified":1647948217020},{"_id":"public/css/copyright.css","hash":"a418da11a88d1feb14500df42ed97a64da6a7611","modified":1647948217020},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1647948217020},{"_id":"public/css/donate.css","hash":"95b2fd65042afecc0b5530847c369bcc11d74bd0","modified":1647948217020},{"_id":"public/js/copycode.js","hash":"fde1f153bab1f00ae8930668094c00aa9ff3c7a3","modified":1647948217020},{"_id":"public/js/copyright.js","hash":"7b1bd775ea22abf33d57f78628f436bf656e439a","modified":1647948217020},{"_id":"public/js/love.js","hash":"5cf89f622bf891cf1986845eb92eadef6f358eb7","modified":1647948217020},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1647948217020},{"_id":"public/js/donate.js","hash":"bdddd8d9847462d020f7a511e7e12c046223195d","modified":1647948217020},{"_id":"public/js/search.js","hash":"6fdfd143646d12b8dbef9b5809cea768192f08aa","modified":1647948217020},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1647948217020},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1647948217020},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1647948217020},{"_id":"public/css/style.css","hash":"4735627811dd6de51dd1a3c7da9e62102d98c355","modified":1647948217020}],"Category":[],"Data":[],"Page":[{"title":"关于我","type":"about","_content":"\n### ***停杯投箸不能食，拔剑四顾心茫然***\n\n博主：齐震元\n\n手机号：13734128107\n\n爱好：无\n\n邮箱：1324843912@qq.com\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ntype: about\n---\n\n### ***停杯投箸不能食，拔剑四顾心茫然***\n\n博主：齐震元\n\n手机号：13734128107\n\n爱好：无\n\n邮箱：1324843912@qq.com\n\n","date":"2022-03-18T07:02:49.649Z","updated":"2022-03-18T07:02:49.649Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl121tipf0000hgthbvdrbzb7","content":"<h3 id=\"停杯投箸不能食，拔剑四顾心茫然\"><a href=\"#停杯投箸不能食，拔剑四顾心茫然\" class=\"headerlink\" title=\"停杯投箸不能食，拔剑四顾心茫然\"></a><em><strong>停杯投箸不能食，拔剑四顾心茫然</strong></em></h3><p>博主：齐震元</p>\n<p>手机号：13734128107</p>\n<p>爱好：无</p>\n<p>邮箱：<a href=\"mailto:&#x31;&#51;&#x32;&#52;&#56;&#x34;&#x33;&#57;&#x31;&#50;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#109;\">&#x31;&#51;&#x32;&#52;&#56;&#x34;&#x33;&#57;&#x31;&#50;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#109;</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"停杯投箸不能食，拔剑四顾心茫然\"><a href=\"#停杯投箸不能食，拔剑四顾心茫然\" class=\"headerlink\" title=\"停杯投箸不能食，拔剑四顾心茫然\"></a><em><strong>停杯投箸不能食，拔剑四顾心茫然</strong></em></h3><p>博主：齐震元</p>\n<p>手机号：13734128107</p>\n<p>爱好：无</p>\n<p>邮箱：<a href=\"mailto:&#x31;&#51;&#x32;&#52;&#56;&#x34;&#x33;&#57;&#x31;&#50;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#109;\">&#x31;&#51;&#x32;&#52;&#56;&#x34;&#x33;&#57;&#x31;&#50;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#109;</a></p>\n"}],"Post":[{"title":"Vue面试题","date":"2022-03-18T05:54:55.000Z","_content":"\n- ### Vue 的生命周期\n\n  `beforeCreate(){}`\n\n   实例初始化之前，开始监控data数据，初始化vue内部事件,el、data未初始化； this.$el和this.$data 都获取不到\n\n  `created(){}   ` \n\n   实例创建完成之后调用，完成了data数据的初始化，el没有，可以调用methods中的方法。this.$data能拿到，this.$el获取不到\n\n  `beforeMount(){} ` \n\n   挂载开始之前被调用，相关render函数被调用（虚拟DOM）,完成了el和data的初始化，此时还没有挂载到页面。this.$data能拿到，this.$el获取不到\n\n  `mounted(){}  `\n\n   挂载完成，$el和$data都能获取到\n\n  `beforeUpdata(){}`\n\n   数据发生变化之前被调用，不会触发重渲染过程\n\n  `updata(){}`\n\n   数据更新后\n\n  `beforeDestroy(){}`\n\n   在实例销毁之前调用，实例仍然完全可用。做一些重置操作，清除组件定时器和监听dom事件实例销毁后调用\n\n  `destroyed(){}`\n\n   实例销毁后调用\n\n- ### keep-alive是做什么用的\n\n  keep-alive 是用来对组件进行缓存，从而节省性能。\n  当keep-alive内被切换时，组件的activated、deactivated这个两个声明周期会执行。\n  首次进入会执行`beforeCreate=>created=>beforeMount=>mounted=>activated`生命周期，\n  第二（n）次进入只会执行activated;\n\n  \n\n- ### v-if和v-show的区别\n\n  v-if 是通过控制dom节点的存在与否来控制元素的显示隐藏；\n       使用场景：条件很少改变使用，有更高的切换消耗。\n  v-show 是通过设置dom元素的display样式 block显示  none隐藏\n       使用场景：频繁切换，有更高的初始化渲染消耗。\n\n- ###   computed、methods、watch的区别\n\n  三者默认加载顺序\n  `computed=>watch,不执行methods`\n  触发条件后加载顺序\n  `computed=>methods=>watch`\n\n  **computer属性 vs methods属性**\n  computer计算属性 具有缓存，在dom加载后立即执行，\n  methods 必须要有触发条件才会执行\n\n  **computed计算属性 vs watch监听属性**\n  computed 是依赖数据发生改变才会执行；\n  watch 是监听属性发生改变才会执行。\n\n  \n\n  ","source":"_posts/Vue面试题.md","raw":"---\n\ntitle: Vue面试题\ndate: 2022-03-18 13:54:55\ntags: vue\n\n---\n\n- ### Vue 的生命周期\n\n  `beforeCreate(){}`\n\n   实例初始化之前，开始监控data数据，初始化vue内部事件,el、data未初始化； this.$el和this.$data 都获取不到\n\n  `created(){}   ` \n\n   实例创建完成之后调用，完成了data数据的初始化，el没有，可以调用methods中的方法。this.$data能拿到，this.$el获取不到\n\n  `beforeMount(){} ` \n\n   挂载开始之前被调用，相关render函数被调用（虚拟DOM）,完成了el和data的初始化，此时还没有挂载到页面。this.$data能拿到，this.$el获取不到\n\n  `mounted(){}  `\n\n   挂载完成，$el和$data都能获取到\n\n  `beforeUpdata(){}`\n\n   数据发生变化之前被调用，不会触发重渲染过程\n\n  `updata(){}`\n\n   数据更新后\n\n  `beforeDestroy(){}`\n\n   在实例销毁之前调用，实例仍然完全可用。做一些重置操作，清除组件定时器和监听dom事件实例销毁后调用\n\n  `destroyed(){}`\n\n   实例销毁后调用\n\n- ### keep-alive是做什么用的\n\n  keep-alive 是用来对组件进行缓存，从而节省性能。\n  当keep-alive内被切换时，组件的activated、deactivated这个两个声明周期会执行。\n  首次进入会执行`beforeCreate=>created=>beforeMount=>mounted=>activated`生命周期，\n  第二（n）次进入只会执行activated;\n\n  \n\n- ### v-if和v-show的区别\n\n  v-if 是通过控制dom节点的存在与否来控制元素的显示隐藏；\n       使用场景：条件很少改变使用，有更高的切换消耗。\n  v-show 是通过设置dom元素的display样式 block显示  none隐藏\n       使用场景：频繁切换，有更高的初始化渲染消耗。\n\n- ###   computed、methods、watch的区别\n\n  三者默认加载顺序\n  `computed=>watch,不执行methods`\n  触发条件后加载顺序\n  `computed=>methods=>watch`\n\n  **computer属性 vs methods属性**\n  computer计算属性 具有缓存，在dom加载后立即执行，\n  methods 必须要有触发条件才会执行\n\n  **computed计算属性 vs watch监听属性**\n  computed 是依赖数据发生改变才会执行；\n  watch 是监听属性发生改变才会执行。\n\n  \n\n  ","slug":"Vue面试题","published":1,"updated":"2022-03-18T07:16:13.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl121tiph0001hgth27naemij","content":"<ul>\n<li><h3 id=\"Vue-的生命周期\"><a href=\"#Vue-的生命周期\" class=\"headerlink\" title=\"Vue 的生命周期\"></a>Vue 的生命周期</h3><p><code>beforeCreate()&#123;&#125;</code></p>\n<p> 实例初始化之前，开始监控data数据，初始化vue内部事件,el、data未初始化； this.$el和this.$data 都获取不到</p>\n<p><code>created()&#123;&#125;   </code> </p>\n<p> 实例创建完成之后调用，完成了data数据的初始化，el没有，可以调用methods中的方法。this.$data能拿到，this.$el获取不到</p>\n<p><code>beforeMount()&#123;&#125; </code> </p>\n<p> 挂载开始之前被调用，相关render函数被调用（虚拟DOM）,完成了el和data的初始化，此时还没有挂载到页面。this.$data能拿到，this.$el获取不到</p>\n<p><code>mounted()&#123;&#125;  </code></p>\n<p> 挂载完成，$el和$data都能获取到</p>\n<p><code>beforeUpdata()&#123;&#125;</code></p>\n<p> 数据发生变化之前被调用，不会触发重渲染过程</p>\n<p><code>updata()&#123;&#125;</code></p>\n<p> 数据更新后</p>\n<p><code>beforeDestroy()&#123;&#125;</code></p>\n<p> 在实例销毁之前调用，实例仍然完全可用。做一些重置操作，清除组件定时器和监听dom事件实例销毁后调用</p>\n<p><code>destroyed()&#123;&#125;</code></p>\n<p> 实例销毁后调用</p>\n</li>\n<li><h3 id=\"keep-alive是做什么用的\"><a href=\"#keep-alive是做什么用的\" class=\"headerlink\" title=\"keep-alive是做什么用的\"></a>keep-alive是做什么用的</h3><p>keep-alive 是用来对组件进行缓存，从而节省性能。<br>当keep-alive内被切换时，组件的activated、deactivated这个两个声明周期会执行。<br>首次进入会执行<code>beforeCreate=&gt;created=&gt;beforeMount=&gt;mounted=&gt;activated</code>生命周期，<br>第二（n）次进入只会执行activated;</p>\n</li>\n<li><h3 id=\"v-if和v-show的区别\"><a href=\"#v-if和v-show的区别\" class=\"headerlink\" title=\"v-if和v-show的区别\"></a>v-if和v-show的区别</h3><p>v-if 是通过控制dom节点的存在与否来控制元素的显示隐藏；</p>\n<pre><code> 使用场景：条件很少改变使用，有更高的切换消耗。\n</code></pre>\n<p>v-show 是通过设置dom元素的display样式 block显示  none隐藏</p>\n<pre><code> 使用场景：频繁切换，有更高的初始化渲染消耗。\n</code></pre>\n</li>\n<li><h3 id=\"computed、methods、watch的区别\"><a href=\"#computed、methods、watch的区别\" class=\"headerlink\" title=\"computed、methods、watch的区别\"></a>computed、methods、watch的区别</h3><p>三者默认加载顺序<br><code>computed=&gt;watch,不执行methods</code><br>触发条件后加载顺序<br><code>computed=&gt;methods=&gt;watch</code></p>\n<p><strong>computer属性 vs methods属性</strong><br>computer计算属性 具有缓存，在dom加载后立即执行，<br>methods 必须要有触发条件才会执行</p>\n<p><strong>computed计算属性 vs watch监听属性</strong><br>computed 是依赖数据发生改变才会执行；<br>watch 是监听属性发生改变才会执行。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><h3 id=\"Vue-的生命周期\"><a href=\"#Vue-的生命周期\" class=\"headerlink\" title=\"Vue 的生命周期\"></a>Vue 的生命周期</h3><p><code>beforeCreate()&#123;&#125;</code></p>\n<p> 实例初始化之前，开始监控data数据，初始化vue内部事件,el、data未初始化； this.$el和this.$data 都获取不到</p>\n<p><code>created()&#123;&#125;   </code> </p>\n<p> 实例创建完成之后调用，完成了data数据的初始化，el没有，可以调用methods中的方法。this.$data能拿到，this.$el获取不到</p>\n<p><code>beforeMount()&#123;&#125; </code> </p>\n<p> 挂载开始之前被调用，相关render函数被调用（虚拟DOM）,完成了el和data的初始化，此时还没有挂载到页面。this.$data能拿到，this.$el获取不到</p>\n<p><code>mounted()&#123;&#125;  </code></p>\n<p> 挂载完成，$el和$data都能获取到</p>\n<p><code>beforeUpdata()&#123;&#125;</code></p>\n<p> 数据发生变化之前被调用，不会触发重渲染过程</p>\n<p><code>updata()&#123;&#125;</code></p>\n<p> 数据更新后</p>\n<p><code>beforeDestroy()&#123;&#125;</code></p>\n<p> 在实例销毁之前调用，实例仍然完全可用。做一些重置操作，清除组件定时器和监听dom事件实例销毁后调用</p>\n<p><code>destroyed()&#123;&#125;</code></p>\n<p> 实例销毁后调用</p>\n</li>\n<li><h3 id=\"keep-alive是做什么用的\"><a href=\"#keep-alive是做什么用的\" class=\"headerlink\" title=\"keep-alive是做什么用的\"></a>keep-alive是做什么用的</h3><p>keep-alive 是用来对组件进行缓存，从而节省性能。<br>当keep-alive内被切换时，组件的activated、deactivated这个两个声明周期会执行。<br>首次进入会执行<code>beforeCreate=&gt;created=&gt;beforeMount=&gt;mounted=&gt;activated</code>生命周期，<br>第二（n）次进入只会执行activated;</p>\n</li>\n<li><h3 id=\"v-if和v-show的区别\"><a href=\"#v-if和v-show的区别\" class=\"headerlink\" title=\"v-if和v-show的区别\"></a>v-if和v-show的区别</h3><p>v-if 是通过控制dom节点的存在与否来控制元素的显示隐藏；</p>\n<pre><code> 使用场景：条件很少改变使用，有更高的切换消耗。\n</code></pre>\n<p>v-show 是通过设置dom元素的display样式 block显示  none隐藏</p>\n<pre><code> 使用场景：频繁切换，有更高的初始化渲染消耗。\n</code></pre>\n</li>\n<li><h3 id=\"computed、methods、watch的区别\"><a href=\"#computed、methods、watch的区别\" class=\"headerlink\" title=\"computed、methods、watch的区别\"></a>computed、methods、watch的区别</h3><p>三者默认加载顺序<br><code>computed=&gt;watch,不执行methods</code><br>触发条件后加载顺序<br><code>computed=&gt;methods=&gt;watch</code></p>\n<p><strong>computer属性 vs methods属性</strong><br>computer计算属性 具有缓存，在dom加载后立即执行，<br>methods 必须要有触发条件才会执行</p>\n<p><strong>computed计算属性 vs watch监听属性</strong><br>computed 是依赖数据发生改变才会执行；<br>watch 是监听属性发生改变才会执行。</p>\n</li>\n</ul>\n"},{"title":"Vuex搞懂5大核心概念","date":"2022-03-21T10:02:38.000Z","_content":"\n#### Vuex是什么？\n\nVuex是全局状态管理器，集中式存储管理应用的所有组件状态。[官网解释](https://vuex.vuejs.org/zh/)\n\n#### Vuex的核心概念\n\n一、 **state**单一状态树，用一个对象就包含了全部的应用层状态；\n\n```js\nimport {createApp} from \"vue\"\nimport {createStore} from \"vuex\"\nconst store = createStore({\n    state(){\n        count:0\n    },\n    getters:{},\n    mutations:{\n    \tadd(state){\n    \t\tstate.count++\n\t\t}\n\t},\n    actions:{},\n    modules:{}\n})\nconst app = createApp({/*根组件*/})\napp.use(store)\n```\n\n可以通过`store.state`获取状态对象，`state.commit('add')`方法触发变更；\n\n在Vue组件中,可以通过`this.$store`来获取状态对象，`this.$store.commit()`方法触发变更；\n\n```js\nmethods:{\n   add(){\n        console.log(this.$store.state.count);\n        this.$store.commit(\"add\");\n    }\n}\n```\n\n当一个组件需要获取多个状态时，将这些状态都声明为计算属性会重复和冗余，我们可以使用`mapSate`辅助函数帮我们生成计算属性。\n\n```js\nimport {mapState } from \"vuex\"\nexport default{\n    computed:{\n       \t...mapState({\n            count:state=>state.count,\n            countAlias:'count',\n            countState(state){\n            \treturn state.count\n            }\n        }),\n        value(){return 1}\n    }\n}\n```\n\n当映射的计算属行名称与state的子节点名称一致，可以传入一个字符串数组\n\n```js\ncomputed:{\n\t...mapState([\"count\"])\n}\n```\n\n二、**Getter** 相当于vue中得计算属性，通过getter进一步处理，接受传参。\n\n```js\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\nVue.use(Vuex)\nexport default new Vuex.store({\n    state:{\n        nickName:\"张\",\n        firstName:\"无极\",\n        todos:[{id:1,name:\"1\"},{id:2,name:\"2\"}]\n    }\n    getters:{\n    \trealName(state){\n             return state.nickName+state.firstName\n        }\n        getTodoId:(state)=>(id)=>{\n            return state.todos.find(todo=>todo.id === id)\n        }\n    }\n})\n\n\n/*在组件中使用 {{realName}} {{getTodoId(2)}} */\ncomputed(){ //computed是不能传参数的\n    realName(){\n        return this.$store.getters.realName /* 通过属性访问*/\n    },\n    getTodoId(){ //不在此处接收传入的值\n        return function(val){ //先return一个函数,把属性变成函数属性,参数接收传入的值\n            return this.$store.getters.getTodoId(val) //再return出计算结果\n        }\n    }\n}\n\n```\n\n使用 **mapGetters** 辅助函数 ，将store中得getter映射到局部计算属性\n\n```js\nimport {mapGetters} from \"vuex\"\nexport default{\n    //...\n    computed:{\n        ...mapGetters([\"realName\"])\n    }\n}\n```\n\n\n\n三、**Mutation** 更改Vuex的store中的状态的唯一提交方法是提交mutation。必须是同步函数\n\n```js\nconst store = createStore({\n    state:{\n        count:1\n    }\n    mutations:{\n        add(state,num){\n   \t\t    state.count+=num\n        }\n    }\n})\n```\n\n在组件中使用，可以使用`this.$store.commit(\"xxx\")`提交mutation,或者使用`mapMutations` 辅助函数；\n\n```js\nimport { mapMutations } from \"vuex\"\nexport default({\n    //...\n    methods:{\n        ...mapMutations ([\n            'add', //将 `this.add(num)` 映射为 `this.$store.commit('add', num)\n        ]),\n        add(){\n            this.$store.commit(\"add\",1)\n        }\n    }\n})\n```\n\n四、Action  提交的是mutation,而不是直接变更状态；可以包含任意异步操作\n\n```js\nconst store = createStore({\n    state:{\n        count:0\n    }\n    mutations:{\n        add(state){\n    \t\tstate.count++\n        }\n    },\n    actions:{\n        increment(context){\n            setTimeOut(()=>{\n                context.commit(\"add\")\n            },1000)\n        }\n    }\n})\n```\n\n在组件中分发Actions,使用`this.$dispath(\"xxx\")`分发，或者使用`mapActions`辅助函数将组件的`methods`映射为`store.dispath`调用\n\n```js\nimport { mapActions } from \"vuex\"\nexport default{\n    //...\n    methods:{\n        ...mapActions([\"increment\"])\n    }\n}\n```\n\n\n\n五、**Module** Vuex允许将store切割成模块 \n\n```js\nconst moduleA = {\n  state: () => ({ ... }),\n  mutations: { ... },\n  actions: { ... },\n  getters: { ... }\n}\n\nconst moduleB = {\n  state: () => ({ ... }),\n  mutations: { ... },\n  actions: { ... }\n}\n\nconst store = createStore({\n  modules: {\n    a: moduleA,\n    b: moduleB\n  }\n})\n\nstore.state.a // -> moduleA 的状态\nstore.state.b // -> moduleB 的状态\n```\n\n","source":"_posts/Vuex学习.md","raw":"---\ntitle: Vuex搞懂5大核心概念\ndate: 2022-03-21 18:02:38\ntags: vue\n---\n\n#### Vuex是什么？\n\nVuex是全局状态管理器，集中式存储管理应用的所有组件状态。[官网解释](https://vuex.vuejs.org/zh/)\n\n#### Vuex的核心概念\n\n一、 **state**单一状态树，用一个对象就包含了全部的应用层状态；\n\n```js\nimport {createApp} from \"vue\"\nimport {createStore} from \"vuex\"\nconst store = createStore({\n    state(){\n        count:0\n    },\n    getters:{},\n    mutations:{\n    \tadd(state){\n    \t\tstate.count++\n\t\t}\n\t},\n    actions:{},\n    modules:{}\n})\nconst app = createApp({/*根组件*/})\napp.use(store)\n```\n\n可以通过`store.state`获取状态对象，`state.commit('add')`方法触发变更；\n\n在Vue组件中,可以通过`this.$store`来获取状态对象，`this.$store.commit()`方法触发变更；\n\n```js\nmethods:{\n   add(){\n        console.log(this.$store.state.count);\n        this.$store.commit(\"add\");\n    }\n}\n```\n\n当一个组件需要获取多个状态时，将这些状态都声明为计算属性会重复和冗余，我们可以使用`mapSate`辅助函数帮我们生成计算属性。\n\n```js\nimport {mapState } from \"vuex\"\nexport default{\n    computed:{\n       \t...mapState({\n            count:state=>state.count,\n            countAlias:'count',\n            countState(state){\n            \treturn state.count\n            }\n        }),\n        value(){return 1}\n    }\n}\n```\n\n当映射的计算属行名称与state的子节点名称一致，可以传入一个字符串数组\n\n```js\ncomputed:{\n\t...mapState([\"count\"])\n}\n```\n\n二、**Getter** 相当于vue中得计算属性，通过getter进一步处理，接受传参。\n\n```js\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\nVue.use(Vuex)\nexport default new Vuex.store({\n    state:{\n        nickName:\"张\",\n        firstName:\"无极\",\n        todos:[{id:1,name:\"1\"},{id:2,name:\"2\"}]\n    }\n    getters:{\n    \trealName(state){\n             return state.nickName+state.firstName\n        }\n        getTodoId:(state)=>(id)=>{\n            return state.todos.find(todo=>todo.id === id)\n        }\n    }\n})\n\n\n/*在组件中使用 {{realName}} {{getTodoId(2)}} */\ncomputed(){ //computed是不能传参数的\n    realName(){\n        return this.$store.getters.realName /* 通过属性访问*/\n    },\n    getTodoId(){ //不在此处接收传入的值\n        return function(val){ //先return一个函数,把属性变成函数属性,参数接收传入的值\n            return this.$store.getters.getTodoId(val) //再return出计算结果\n        }\n    }\n}\n\n```\n\n使用 **mapGetters** 辅助函数 ，将store中得getter映射到局部计算属性\n\n```js\nimport {mapGetters} from \"vuex\"\nexport default{\n    //...\n    computed:{\n        ...mapGetters([\"realName\"])\n    }\n}\n```\n\n\n\n三、**Mutation** 更改Vuex的store中的状态的唯一提交方法是提交mutation。必须是同步函数\n\n```js\nconst store = createStore({\n    state:{\n        count:1\n    }\n    mutations:{\n        add(state,num){\n   \t\t    state.count+=num\n        }\n    }\n})\n```\n\n在组件中使用，可以使用`this.$store.commit(\"xxx\")`提交mutation,或者使用`mapMutations` 辅助函数；\n\n```js\nimport { mapMutations } from \"vuex\"\nexport default({\n    //...\n    methods:{\n        ...mapMutations ([\n            'add', //将 `this.add(num)` 映射为 `this.$store.commit('add', num)\n        ]),\n        add(){\n            this.$store.commit(\"add\",1)\n        }\n    }\n})\n```\n\n四、Action  提交的是mutation,而不是直接变更状态；可以包含任意异步操作\n\n```js\nconst store = createStore({\n    state:{\n        count:0\n    }\n    mutations:{\n        add(state){\n    \t\tstate.count++\n        }\n    },\n    actions:{\n        increment(context){\n            setTimeOut(()=>{\n                context.commit(\"add\")\n            },1000)\n        }\n    }\n})\n```\n\n在组件中分发Actions,使用`this.$dispath(\"xxx\")`分发，或者使用`mapActions`辅助函数将组件的`methods`映射为`store.dispath`调用\n\n```js\nimport { mapActions } from \"vuex\"\nexport default{\n    //...\n    methods:{\n        ...mapActions([\"increment\"])\n    }\n}\n```\n\n\n\n五、**Module** Vuex允许将store切割成模块 \n\n```js\nconst moduleA = {\n  state: () => ({ ... }),\n  mutations: { ... },\n  actions: { ... },\n  getters: { ... }\n}\n\nconst moduleB = {\n  state: () => ({ ... }),\n  mutations: { ... },\n  actions: { ... }\n}\n\nconst store = createStore({\n  modules: {\n    a: moduleA,\n    b: moduleB\n  }\n})\n\nstore.state.a // -> moduleA 的状态\nstore.state.b // -> moduleB 的状态\n```\n\n","slug":"Vuex学习","published":1,"updated":"2022-03-22T07:57:20.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl121tipk0002hgth328y8vm2","content":"<h4 id=\"Vuex是什么？\"><a href=\"#Vuex是什么？\" class=\"headerlink\" title=\"Vuex是什么？\"></a>Vuex是什么？</h4><p>Vuex是全局状态管理器，集中式存储管理应用的所有组件状态。<a href=\"https://vuex.vuejs.org/zh/\">官网解释</a></p>\n<h4 id=\"Vuex的核心概念\"><a href=\"#Vuex的核心概念\" class=\"headerlink\" title=\"Vuex的核心概念\"></a>Vuex的核心概念</h4><p>一、 <strong>state</strong>单一状态树，用一个对象就包含了全部的应用层状态；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createApp&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"title function_\">state</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">getters</span>:&#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">    \t<span class=\"title function_\">add</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">    \t\tstate.<span class=\"property\">count</span>++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>:&#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">modules</span>:&#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(&#123;<span class=\"comment\">/*根组件*/</span>&#125;)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(store)</span><br></pre></td></tr></table></figure>\n\n<p>可以通过<code>store.state</code>获取状态对象，<code>state.commit(&#39;add&#39;)</code>方法触发变更；</p>\n<p>在Vue组件中,可以通过<code>this.$store</code>来获取状态对象，<code>this.$store.commit()</code>方法触发变更；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">   <span class=\"title function_\">add</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;add&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当一个组件需要获取多个状态时，将这些状态都声明为计算属性会重复和冗余，我们可以使用<code>mapSate</code>辅助函数帮我们生成计算属性。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\">       \t...<span class=\"title function_\">mapState</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">count</span>:<span class=\"function\"><span class=\"params\">state</span>=&gt;</span>state.<span class=\"property\">count</span>,</span><br><span class=\"line\">            <span class=\"attr\">countAlias</span>:<span class=\"string\">&#x27;count&#x27;</span>,</span><br><span class=\"line\">            <span class=\"title function_\">countState</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">            \t<span class=\"keyword\">return</span> state.<span class=\"property\">count</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"title function_\">value</span>(<span class=\"params\"></span>)&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当映射的计算属行名称与state的子节点名称一致，可以传入一个字符串数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\">\t...<span class=\"title function_\">mapState</span>([<span class=\"string\">&quot;count&quot;</span>])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>二、<strong>Getter</strong> 相当于vue中得计算属性，通过getter进一步处理，接受传参。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vuex</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Vuex</span>)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title function_\">store</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">nickName</span>:<span class=\"string\">&quot;张&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">firstName</span>:<span class=\"string\">&quot;无极&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">todos</span>:[&#123;<span class=\"attr\">id</span>:<span class=\"number\">1</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;1&quot;</span>&#125;,&#123;<span class=\"attr\">id</span>:<span class=\"number\">2</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;2&quot;</span>&#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attr\">getters</span>:&#123;</span><br><span class=\"line\">    \t<span class=\"title function_\">realName</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> state.<span class=\"property\">nickName</span>+state.<span class=\"property\">firstName</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"attr\">getTodoId</span>:<span class=\"function\">(<span class=\"params\">state</span>)=&gt;</span><span class=\"function\">(<span class=\"params\">id</span>)=&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> state.<span class=\"property\">todos</span>.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">todo</span>=&gt;</span>todo.<span class=\"property\">id</span> === id)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*在组件中使用 &#123;&#123;realName&#125;&#125; &#123;&#123;getTodoId(2)&#125;&#125; */</span></span><br><span class=\"line\"><span class=\"title function_\">computed</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//computed是不能传参数的</span></span><br><span class=\"line\">    <span class=\"title function_\">realName</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">getters</span>.<span class=\"property\">realName</span> <span class=\"comment\">/* 通过属性访问*/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getTodoId</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//不在此处接收传入的值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\">val</span>)&#123; <span class=\"comment\">//先return一个函数,把属性变成函数属性,参数接收传入的值</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">getters</span>.<span class=\"title function_\">getTodoId</span>(val) <span class=\"comment\">//再return出计算结果</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>使用 <strong>mapGetters</strong> 辅助函数 ，将store中得getter映射到局部计算属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;mapGetters&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\">        ...<span class=\"title function_\">mapGetters</span>([<span class=\"string\">&quot;realName&quot;</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>三、<strong>Mutation</strong> 更改Vuex的store中的状态的唯一提交方法是提交mutation。必须是同步函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">count</span>:<span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">add</span>(<span class=\"params\">state,num</span>)&#123;</span><br><span class=\"line\">   \t\t    state.<span class=\"property\">count</span>+=num</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在组件中使用，可以使用<code>this.$store.commit(&quot;xxx&quot;)</code>提交mutation,或者使用<code>mapMutations</code> 辅助函数；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"title function_\">default</span>(&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        ...mapMutations ([</span><br><span class=\"line\">            <span class=\"string\">&#x27;add&#x27;</span>, <span class=\"comment\">//将 `this.add(num)` 映射为 `this.$store.commit(&#x27;add&#x27;, num)</span></span><br><span class=\"line\">        ]),</span><br><span class=\"line\">        <span class=\"title function_\">add</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;add&quot;</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>四、Action  提交的是mutation,而不是直接变更状态；可以包含任意异步操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">add</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">    \t\tstate.<span class=\"property\">count</span>++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">increment</span>(<span class=\"params\">context</span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">setTimeOut</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;add&quot;</span>)</span><br><span class=\"line\">            &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在组件中分发Actions,使用<code>this.$dispath(&quot;xxx&quot;)</code>分发，或者使用<code>mapActions</code>辅助函数将组件的<code>methods</code>映射为<code>store.dispath</code>调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        ...<span class=\"title function_\">mapActions</span>([<span class=\"string\">&quot;increment&quot;</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>五、<strong>Module</strong> Vuex允许将store切割成模块 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123; ... &#125;),</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> moduleB = &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123; ... &#125;),</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">a</span>: moduleA,</span><br><span class=\"line\">    <span class=\"attr\">b</span>: moduleB</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">store.<span class=\"property\">state</span>.<span class=\"property\">a</span> <span class=\"comment\">// -&gt; moduleA 的状态</span></span><br><span class=\"line\">store.<span class=\"property\">state</span>.<span class=\"property\">b</span> <span class=\"comment\">// -&gt; moduleB 的状态</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"Vuex是什么？\"><a href=\"#Vuex是什么？\" class=\"headerlink\" title=\"Vuex是什么？\"></a>Vuex是什么？</h4><p>Vuex是全局状态管理器，集中式存储管理应用的所有组件状态。<a href=\"https://vuex.vuejs.org/zh/\">官网解释</a></p>\n<h4 id=\"Vuex的核心概念\"><a href=\"#Vuex的核心概念\" class=\"headerlink\" title=\"Vuex的核心概念\"></a>Vuex的核心概念</h4><p>一、 <strong>state</strong>单一状态树，用一个对象就包含了全部的应用层状态；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createApp&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"title function_\">state</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">getters</span>:&#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">    \t<span class=\"title function_\">add</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">    \t\tstate.<span class=\"property\">count</span>++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>:&#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">modules</span>:&#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(&#123;<span class=\"comment\">/*根组件*/</span>&#125;)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(store)</span><br></pre></td></tr></table></figure>\n\n<p>可以通过<code>store.state</code>获取状态对象，<code>state.commit(&#39;add&#39;)</code>方法触发变更；</p>\n<p>在Vue组件中,可以通过<code>this.$store</code>来获取状态对象，<code>this.$store.commit()</code>方法触发变更；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">   <span class=\"title function_\">add</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;add&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当一个组件需要获取多个状态时，将这些状态都声明为计算属性会重复和冗余，我们可以使用<code>mapSate</code>辅助函数帮我们生成计算属性。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\">       \t...<span class=\"title function_\">mapState</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">count</span>:<span class=\"function\"><span class=\"params\">state</span>=&gt;</span>state.<span class=\"property\">count</span>,</span><br><span class=\"line\">            <span class=\"attr\">countAlias</span>:<span class=\"string\">&#x27;count&#x27;</span>,</span><br><span class=\"line\">            <span class=\"title function_\">countState</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">            \t<span class=\"keyword\">return</span> state.<span class=\"property\">count</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"title function_\">value</span>(<span class=\"params\"></span>)&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当映射的计算属行名称与state的子节点名称一致，可以传入一个字符串数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\">\t...<span class=\"title function_\">mapState</span>([<span class=\"string\">&quot;count&quot;</span>])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>二、<strong>Getter</strong> 相当于vue中得计算属性，通过getter进一步处理，接受传参。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vuex</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Vuex</span>)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title function_\">store</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">nickName</span>:<span class=\"string\">&quot;张&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">firstName</span>:<span class=\"string\">&quot;无极&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">todos</span>:[&#123;<span class=\"attr\">id</span>:<span class=\"number\">1</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;1&quot;</span>&#125;,&#123;<span class=\"attr\">id</span>:<span class=\"number\">2</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;2&quot;</span>&#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attr\">getters</span>:&#123;</span><br><span class=\"line\">    \t<span class=\"title function_\">realName</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> state.<span class=\"property\">nickName</span>+state.<span class=\"property\">firstName</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"attr\">getTodoId</span>:<span class=\"function\">(<span class=\"params\">state</span>)=&gt;</span><span class=\"function\">(<span class=\"params\">id</span>)=&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> state.<span class=\"property\">todos</span>.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">todo</span>=&gt;</span>todo.<span class=\"property\">id</span> === id)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*在组件中使用 &#123;&#123;realName&#125;&#125; &#123;&#123;getTodoId(2)&#125;&#125; */</span></span><br><span class=\"line\"><span class=\"title function_\">computed</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//computed是不能传参数的</span></span><br><span class=\"line\">    <span class=\"title function_\">realName</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">getters</span>.<span class=\"property\">realName</span> <span class=\"comment\">/* 通过属性访问*/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getTodoId</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//不在此处接收传入的值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\">val</span>)&#123; <span class=\"comment\">//先return一个函数,把属性变成函数属性,参数接收传入的值</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">getters</span>.<span class=\"title function_\">getTodoId</span>(val) <span class=\"comment\">//再return出计算结果</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>使用 <strong>mapGetters</strong> 辅助函数 ，将store中得getter映射到局部计算属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;mapGetters&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\">        ...<span class=\"title function_\">mapGetters</span>([<span class=\"string\">&quot;realName&quot;</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>三、<strong>Mutation</strong> 更改Vuex的store中的状态的唯一提交方法是提交mutation。必须是同步函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">count</span>:<span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">add</span>(<span class=\"params\">state,num</span>)&#123;</span><br><span class=\"line\">   \t\t    state.<span class=\"property\">count</span>+=num</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在组件中使用，可以使用<code>this.$store.commit(&quot;xxx&quot;)</code>提交mutation,或者使用<code>mapMutations</code> 辅助函数；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"title function_\">default</span>(&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        ...mapMutations ([</span><br><span class=\"line\">            <span class=\"string\">&#x27;add&#x27;</span>, <span class=\"comment\">//将 `this.add(num)` 映射为 `this.$store.commit(&#x27;add&#x27;, num)</span></span><br><span class=\"line\">        ]),</span><br><span class=\"line\">        <span class=\"title function_\">add</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;add&quot;</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>四、Action  提交的是mutation,而不是直接变更状态；可以包含任意异步操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">add</span>(<span class=\"params\">state</span>)&#123;</span><br><span class=\"line\">    \t\tstate.<span class=\"property\">count</span>++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">increment</span>(<span class=\"params\">context</span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">setTimeOut</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;add&quot;</span>)</span><br><span class=\"line\">            &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在组件中分发Actions,使用<code>this.$dispath(&quot;xxx&quot;)</code>分发，或者使用<code>mapActions</code>辅助函数将组件的<code>methods</code>映射为<code>store.dispath</code>调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        ...<span class=\"title function_\">mapActions</span>([<span class=\"string\">&quot;increment&quot;</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>五、<strong>Module</strong> Vuex允许将store切割成模块 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123; ... &#125;),</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> moduleB = &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123; ... &#125;),</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">a</span>: moduleA,</span><br><span class=\"line\">    <span class=\"attr\">b</span>: moduleB</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">store.<span class=\"property\">state</span>.<span class=\"property\">a</span> <span class=\"comment\">// -&gt; moduleA 的状态</span></span><br><span class=\"line\">store.<span class=\"property\">state</span>.<span class=\"property\">b</span> <span class=\"comment\">// -&gt; moduleB 的状态</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-03-16T08:58:22.853Z","updated":"1985-10-26T08:15:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl121tipm0004hgth1avm286j","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"深、浅拷贝","date":"2022-03-22T07:58:11.000Z","_content":"","source":"_posts/深、浅拷贝.md","raw":"---\ntitle: 深、浅拷贝\ndate: 2022-03-22 15:58:11\ntags: js\n---\n","slug":"深、浅拷贝","published":1,"updated":"2022-03-22T07:58:20.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl121tipo0005hgth4xes3nwm","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"圣杯和双飞翼布局","date":"2022-03-18T07:17:57.000Z","_content":"\n圣杯和双飞翼布局的模型，即三列结构，左右两边定宽，中间自适应，根据屏幕大小响应。\n\n![](/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg)\n\n### 如何实现\n\n先给出html结构，注意中间自适应元素放在最前面\n\n```html\n<div id=\"container\">\n    <div id=\"center\" class=\"column\"></div>\n    <div id=\"left\" class=\"column\"></div>\n    <div id=\"right\" class=\"column\"></div>\n</div>\n```\n\ncss样式\n\n```css\n    #container{\n        padding:0 200px;\n    }\n    .column{\n        height:300px;\n        float:left;\n        position: relative;\n    }\n    #left{\n        width:200px;\n        background: aqua;\n        margin-left: -100%;\n        left: -200px;\n    }\n    #right{\n        width:200px;\n        background: rebeccapurple;\n        margin-left:-200px;\n        right:-200px;\n    }\n    #center{\n        width:100%;\n        background: chocolate;\n    }\n```\n\n\n\n使用flex实现，html结构按照左、自适应、右布局。将容器设置为`display: flex;` 两侧设置固定宽度,并不允许弹性缩放`flex: 0; flex-basis: 200px;`中间允许弹性缩放，不设置宽度`flex:1;`\n\n```css\n    #container{\n        display: flex;\n\n    }\n    .column{\n        height:300px;\n    }\n    #left{\n        flex: 0;\n        flex-basis: 200px;\n        background: aqua;\n\n    }\n    #right{\n        flex: 0;\n        flex-basis: 200px;\n        background: rebeccapurple;\n\n    }\n    #center{\n       flex:1;\n       background: chocolate;\n    }\n```\n\n\n\n","source":"_posts/圣杯和双飞翼布局.md","raw":"---\ntitle: 圣杯和双飞翼布局\ndate: 2022-03-18 15:17:57\ntags: css\n---\n\n圣杯和双飞翼布局的模型，即三列结构，左右两边定宽，中间自适应，根据屏幕大小响应。\n\n![](/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg)\n\n### 如何实现\n\n先给出html结构，注意中间自适应元素放在最前面\n\n```html\n<div id=\"container\">\n    <div id=\"center\" class=\"column\"></div>\n    <div id=\"left\" class=\"column\"></div>\n    <div id=\"right\" class=\"column\"></div>\n</div>\n```\n\ncss样式\n\n```css\n    #container{\n        padding:0 200px;\n    }\n    .column{\n        height:300px;\n        float:left;\n        position: relative;\n    }\n    #left{\n        width:200px;\n        background: aqua;\n        margin-left: -100%;\n        left: -200px;\n    }\n    #right{\n        width:200px;\n        background: rebeccapurple;\n        margin-left:-200px;\n        right:-200px;\n    }\n    #center{\n        width:100%;\n        background: chocolate;\n    }\n```\n\n\n\n使用flex实现，html结构按照左、自适应、右布局。将容器设置为`display: flex;` 两侧设置固定宽度,并不允许弹性缩放`flex: 0; flex-basis: 200px;`中间允许弹性缩放，不设置宽度`flex:1;`\n\n```css\n    #container{\n        display: flex;\n\n    }\n    .column{\n        height:300px;\n    }\n    #left{\n        flex: 0;\n        flex-basis: 200px;\n        background: aqua;\n\n    }\n    #right{\n        flex: 0;\n        flex-basis: 200px;\n        background: rebeccapurple;\n\n    }\n    #center{\n       flex:1;\n       background: chocolate;\n    }\n```\n\n\n\n","slug":"圣杯和双飞翼布局","published":1,"updated":"2022-03-19T08:17:49.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl121tips000bhgth508yg3fx","content":"<p>圣杯和双飞翼布局的模型，即三列结构，左右两边定宽，中间自适应，根据屏幕大小响应。</p>\n<p><img src=\"/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg\"></p>\n<h3 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a>如何实现</h3><p>先给出html结构，注意中间自适应元素放在最前面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#container</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0</span> <span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.column</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#left</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: aqua;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#right</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: rebeccapurple;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>:-<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>:-<span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#center</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: chocolate;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>使用flex实现，html结构按照左、自适应、右布局。将容器设置为<code>display: flex;</code> 两侧设置固定宽度,并不允许弹性缩放<code>flex: 0; flex-basis: 200px;</code>中间允许弹性缩放，不设置宽度<code>flex:1;</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#container</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.column</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#left</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: aqua;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#right</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: rebeccapurple;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#center</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">flex</span>:<span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: chocolate;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>圣杯和双飞翼布局的模型，即三列结构，左右两边定宽，中间自适应，根据屏幕大小响应。</p>\n<p><img src=\"/images/v2-b01716cfa29a784d8a132ec99d7ef56b_b.jpg\"></p>\n<h3 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a>如何实现</h3><p>先给出html结构，注意中间自适应元素放在最前面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;column&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#container</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0</span> <span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.column</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#left</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: aqua;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#right</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: rebeccapurple;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>:-<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>:-<span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#center</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: chocolate;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>使用flex实现，html结构按照左、自适应、右布局。将容器设置为<code>display: flex;</code> 两侧设置固定宽度,并不允许弹性缩放<code>flex: 0; flex-basis: 200px;</code>中间允许弹性缩放，不设置宽度<code>flex:1;</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#container</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.column</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#left</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: aqua;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#right</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: rebeccapurple;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#center</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">flex</span>:<span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: chocolate;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"[随笔]分享心情","date":"2022-03-17T10:47:44.000Z","_content":"\n不知道是第几次下定决心去写博客，迈出了第一步。对平时的技术做一些积累，也记录一些趣事。希望自己可以坚持下去，不能随便立flag。\n\n加油吧，少年！！！\n\n\n\n这几天组里好多同事提了离职，愿他们前程似锦。做好本职工作，提升自己。","source":"_posts/随笔.md","raw":"---\ntitle: \"[随笔]分享心情\"\ndate: 2022-03-17 18:47:44\ntags: 随笔\n---\n\n不知道是第几次下定决心去写博客，迈出了第一步。对平时的技术做一些积累，也记录一些趣事。希望自己可以坚持下去，不能随便立flag。\n\n加油吧，少年！！！\n\n\n\n这几天组里好多同事提了离职，愿他们前程似锦。做好本职工作，提升自己。","slug":"随笔","published":1,"updated":"2022-03-17T11:02:20.099Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl121tipt000chgth70ud4uyg","content":"<p>不知道是第几次下定决心去写博客，迈出了第一步。对平时的技术做一些积累，也记录一些趣事。希望自己可以坚持下去，不能随便立flag。</p>\n<p>加油吧，少年！！！</p>\n<p>这几天组里好多同事提了离职，愿他们前程似锦。做好本职工作，提升自己。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>不知道是第几次下定决心去写博客，迈出了第一步。对平时的技术做一些积累，也记录一些趣事。希望自己可以坚持下去，不能随便立flag。</p>\n<p>加油吧，少年！！！</p>\n<p>这几天组里好多同事提了离职，愿他们前程似锦。做好本职工作，提升自己。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl121tiph0001hgth27naemij","tag_id":"cl121tipl0003hgth10e6dr6p","_id":"cl121tipq0007hgth5zos2pyl"},{"post_id":"cl121tipk0002hgth328y8vm2","tag_id":"cl121tipl0003hgth10e6dr6p","_id":"cl121tipq0009hgth23o924cm"},{"post_id":"cl121tipo0005hgth4xes3nwm","tag_id":"cl121tipq0008hgth0zd92el4","_id":"cl121tipr000ahgth943r47nh"},{"post_id":"cl121tips000bhgth508yg3fx","tag_id":"cl121tipt000dhgth4j0a036q","_id":"cl121tipu000fhgthazkhhwq7"},{"post_id":"cl121tipt000chgth70ud4uyg","tag_id":"cl121tipu000ehgthftdvh54i","_id":"cl121tipu000ghgthag66ez5z"}],"Tag":[{"name":"vue","_id":"cl121tipl0003hgth10e6dr6p"},{"name":"js","_id":"cl121tipq0008hgth0zd92el4"},{"name":"css","_id":"cl121tipt000dhgth4j0a036q"},{"name":"随笔","_id":"cl121tipu000ehgthftdvh54i"}]}}